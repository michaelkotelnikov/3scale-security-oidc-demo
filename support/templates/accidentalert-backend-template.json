{
    "apiVersion": "v1",
    "kind": "Template",
    "metadata": {
      "annotations": {
        "description": "Spring-Boot and Camel QuickStart. This example demonstrates how you can use Apache Camel with Spring Boot on Openshift. The quickstart uses Spring Boot to configure a little application that includes a Camel route that triggeres a message every 5th second, and routes the message to a log.",
        "tags": "quickstart,java,springboot,fis,jboss-fuse",
        "iconClass": "icon-jboss",
        "version": "2.0"
      },
      "name": "accidentalert-backend"
    },
    "labels": {
      "template": "accidentalert-backend"
    },
    "parameters": [
      {
        "name": "APP_NAME",
        "displayName": "Application Name",
        "required": true,
        "value": "accidentalert-backend",
        "description": "The name assigned to the application."
      },
      {
        "name": "GIT_REPO",
        "displayName": "Git Repository URL",
        "required": true,
        "value": "https://github.com/jbossdemocentral/3scale-security-oidc-demo.git",
        "description": "The URL of the repository with your application source code."
      },
      {
        "name": "CONTEXT_DIR",
        "displayName": "Git Repository context",
        "value": "/projects/myaccidentalert",
        "description": "Path within Git project to build; empty for root project directory."
      },
      {
        "name": "GIT_REF",
        "displayName": "Git Reference",
        "value": "master",
        "description": "Set this to a branch name, tag or other ref of your repository if you are not using the default branch."
      },
      {
        "name": "ACTIVEMQ_SERVICE_NAME",
        "displayName": "ActiveMQ Broker Service",
        "required": true,
        "value": "broker-amq-tcp",
        "description": "Set this to the name of the TCP service of the ActiveMQ broker. You may need to create a broker first."
      },
      {
        "name": "ACTIVEMQ_BROKER_USERNAME",
        "displayName": "ActiveMQ Broker Username",
        "description": "The username used to authenticate with the ActiveMQ broker. Leave it empty if authentication is disabled."
      },
      {
        "name": "ACTIVEMQ_BROKER_PASSWORD",
        "displayName": "ActiveMQ Broker Password",
        "description": "The password used to authenticate with the ActiveMQ broker. Leave it empty if authentication is disabled."
      },
      {
        "name": "BUILDER_VERSION",
        "displayName": "Builder version",
        "value": "2.0",
        "description": "The version of the FIS S2I builder image to use."
      },
      {
        "name": "APP_VERSION",
        "displayName": "Application Version",
        "value": "2.2.64-SNAPSHOT",
        "description": "The application version."
      },
      {
        "name": "MAVEN_ARGS",
        "displayName": "Maven Arguments",
        "value": "package -DskipTests -Dfabric8.skip -e -B",
        "description": "Arguments passed to mvn in the build."
      },
      {
        "name": "MAVEN_ARGS_APPEND",
        "displayName": "Extra Maven Arguments",
        "description": "Extra arguments passed to mvn, e.g. for multi-module builds."
      },
      {
        "name": "ARTIFACT_DIR",
        "displayName": "Maven build directory",
        "description": "Directory of the artifact to be built, e.g. for multi-module builds."
      },
      {
        "name": "IMAGE_STREAM_NAMESPACE",
        "displayName": "Image Stream Namespace",
        "value": "michael",
        "required": true,
        "description": "Namespace in which the Fuse ImageStreams are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project."
      },
      {
        "name": "BUILD_SECRET",
        "displayName": "Git Build Secret",
        "generate": "expression",
        "description": "The secret needed to trigger a build.",
        "from": "[a-zA-Z0-9]{40}"
      },
      {
        "name": "CPU_REQUEST",
        "displayName": "CPU request",
        "value": "0.2",
        "required": true,
        "description": "The amount of CPU to request."
      },
      {
        "name": "MEMORY_REQUEST",
        "displayName": "Memory request",
        "value": "256Mi",
        "required": true,
        "description": "The amount of memory required for the container to run."
      },
      {
        "name": "CPU_LIMIT",
        "displayName": "CPU limit",
        "value": "1.0",
        "required": true,
        "description": "The amount of CPU the container is limited to use."
      },
      {
        "name": "MEMORY_LIMIT",
        "displayName": "Memory limit",
        "value": "256Mi",
        "required": true,
        "description": "The amount of memory the container is limited to use."
      },
      {
        "name": "BUILD_MEMORY_REQUEST",
        "displayName": "Build Memory request",
        "value": "0.7G",
        "required": true,
        "description": "The amount of memory to request for builds."
      },
      {
        "name": "BUILD_MEMORY_LIMIT",
        "displayName": "Build Memory limit",
        "value": "0.8G",
        "required": true,
        "description": "The amount of memory the build container is limited to use."
      }
    ],
    "objects": [
      {
        "kind": "DeploymentConfig",
        "apiVersion": "v1",
        "metadata": {
          "name": "${APP_NAME}",
          "creationTimestamp": null,
          "labels": {
            "component": "${APP_NAME}",
            "group": "security-oidc",
            "project": "${APP_NAME}",
            "version": "${APP_VERSION}"
          }
        },
        "spec": {
          "strategy": {
            "resources": {}
          },
          "triggers": [
            {
              "type": "ImageChange",
              "imageChangeParams": {
                "automatic": true,
                "containerNames": [
                  "${APP_NAME}"
                ],
                "from": {
                  "kind": "ImageStreamTag",
                  "namespace": "${IMAGE_STREAM_NAMESPACE}",
                  "name": "3scale-demo:2.0"
                }
              }
            },
            {
              "type": "ConfigChange"
            }
          ],
          "replicas": 1,
          "selector": {
            "component": "${APP_NAME}",
            "deploymentconfig": "${APP_NAME}",
            "group": "security-oidc",
            "project": "${APP_NAME}",
            "version": "${APP_VERSION}"
          },
          "template": {
            "metadata": {
              "creationTimestamp": null,
              "labels": {
                "component": "${APP_NAME}",
                "deploymentconfig": "${APP_NAME}",
                "group": "security-oidc",
                "project": "${APP_NAME}",
                "version": "${APP_VERSION}"
              }
            },
            "spec": {
              "containers": [
                {
                  "name": "${APP_NAME}",
                  "image": "quay.io/mkotelni/3scale-demo:2.0",
                  "imagePullPolicy": "Always",
                  "readinessProbe" : {
                    "httpGet" : {
                      "path" : "/health",
                      "port" : 8081
                    },
                    "initialDelaySeconds" : 10
                  },
                  "livenessProbe" : {
                    "httpGet" : {
                      "path" : "/health",
                      "port" : 8081
                    },
                    "initialDelaySeconds" : 180
                  },
                  "ports": [
                    {
                      "containerPort": 8778,
                      "name": "jolokia"
                    }
                  ],
                  "env" : [ {
                    "name" : "KUBERNETES_NAMESPACE",
                    "valueFrom" : {
                      "fieldRef" : {
                        "fieldPath" : "metadata.namespace"
                      }
                    }
                  }, {
                    "name": "ACTIVEMQ_SERVICE_NAME",
                    "value": "${ACTIVEMQ_SERVICE_NAME}"
                  }, {
                    "name": "ACTIVEMQ_BROKER_USERNAME",
                    "value": "${ACTIVEMQ_BROKER_USERNAME}"
                  }, {
                    "name": "ACTIVEMQ_BROKER_PASSWORD",
                    "value": "${ACTIVEMQ_BROKER_PASSWORD}"
                  } ],
                  "resources": {
                    "requests": {
                      "cpu": "${CPU_REQUEST}",
                      "memory": "${MEMORY_REQUEST}"
                    },
                    "limits": {
                      "cpu": "${CPU_LIMIT}",
                      "memory": "${MEMORY_LIMIT}"
                    }
                  }
                }
              ]
            }
          }
        },
        "status": {}
      },
      {
        "apiVersion": "v1",
        "kind": "Service",
        "metadata": {
          "creationTimestamp": null,
          "labels": {
            "component": "${APP_NAME}",
            "group": "security-oidc",
            "project": "${APP_NAME}",
            "version": "${APP_VERSION}"
          },
          "name": "${APP_NAME}"
        },
        "spec": {
          "ports": [
            {
              "name": "tcp",
              "port": 8080,
              "protocol": "TCP",
              "targetPort": 8080
            }
          ],
          "selector": {
            "component": "${APP_NAME}",
            "deploymentconfig": "${APP_NAME}",
            "project": "${APP_NAME}",
            "version": "${APP_VERSION}"
          },
          "sessionAffinity": "None",
          "type": "ClusterIP"
        },
        "status": {
          "loadBalancer": {
          }
        }
      },
      {
        "apiVersion": "v1",
        "kind": "Route",
        "metadata": {
          "creationTimestamp": null,
          "labels": {
            "component": "${APP_NAME}",
            "group": "security-oidc",
            "project": "${APP_NAME}",
            "version": "${APP_VERSION}"
          },
          "name": "${APP_NAME}"
        },
        "spec": {
          "port": {
            "targetPort": 8080
          },
          "to": {
            "kind": "Service",
            "name": "${APP_NAME}"
          }
        },
        "status": {
        }
      }
    ]
  }